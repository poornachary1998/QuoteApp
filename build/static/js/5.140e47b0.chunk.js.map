{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","activeClassName","QuoteDetail","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2B,qBCA3DD,EAAOC,QAAU,CAAC,SAAW,gC,kGCmBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAASJ,UAAU,MAAMK,gBAAiBC,UAAaC,GAAE,kBAAaR,EAAMS,IAA5E,+BAKL,E,iBCiCcC,EAnCG,SAACV,GACjB,IAXkBW,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAlBYV,EAkBcX,EAAMW,OAlBZC,EAkBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,CAEvC,KAiBD,OACE,eAAC,WAAD,WACE,qBAAKR,UAAWC,IAAQuB,QAAxB,SACE,yBAAQC,QARe,WAE3Bb,EAAQc,KAAR,UAAgBZ,EAASa,SAAzB,iBAA2CX,EAAqB,OAAO,OAC1E,EAKO,kBACIA,EAAqB,aAAa,iBAGxC,oBAAIhB,UAAWC,IAAQ2B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVJ,OAAQ0B,EAAM1B,OACdD,KAAM2B,EAAM3B,MAHP2B,EAAMtB,GAFG,QAWzB,E,yBCnCcuB,EAXO,WACpB,OACE,sBAAK/B,UAAWC,IAAQ+B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMhC,UAAU,MAAMO,GAAG,aAAzB,2BAKL,E,gBCoBc0B,UAxBG,WACd,MAA0DC,YAAQC,KAAc,GAAxEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAoBC,EAAjD,EAAiDA,MAMjD,OAJAC,qBAAU,WACNL,GACH,GAAE,CAACA,IAEW,YAAXC,EAEO,qBAAKrC,UAAU,WAAf,SACP,cAAC0C,EAAA,EAAD,MAIAF,EACO,mBAAGxC,UAAU,mBAAb,SAAiCwC,IAE7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAIzD,cAAC,EAAD,CAAWjC,OAAU4B,IAHd,cAAC,EAAD,GAKd,C","file":"static/js/5.140e47b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2J9bn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3crIv\",\"sorting\":\"QuoteList_sorting__1Y8mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2TCQV\"};","import { NavLink } from 'react-router-dom';\nimport QuoteDetail from '../../Pages/QuoteDetail';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <NavLink className='btn' activeClassName={QuoteDetail} to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </NavLink>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory , useLocation} from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n  const changeSortingHandler = () => {\n\n    history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc':'asc')}`);\n}\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n      Sort {isSortingAscending ? 'Descending':'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/hooks/use-http\";\r\nimport NoQuotesFound  from \"../components/quotes/NoQuotesFound\";\r\nimport { getAllQuotes } from \"../lib/lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error }= useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending')\r\n    {\r\n        return <div className=\"centered\">\r\n        <LoadingSpinner/>\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"centered focused\">{error}</p>\r\n    }\r\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />;\r\n    }\r\n    return (\r\n        <QuoteList quotes = {loadedQuotes}/>\r\n)\r\n}\r\nexport default AllQuotes;"],"sourceRoot":""}